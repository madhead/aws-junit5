#tag::variables[]
variables:
  SERVICES: dynamodb,dynamodbstreams,s3,kinesis,firehose,sqs,sns,ses
  AWS_CBOR_DISABLE: 'true'
  CBOR_ENABLED: 'false'
#end::variables[]

stages:
  - test
  - publish

.unit:
  stage: test
  cache:
    key: $CI_JOB_NAME
    paths:
      - .gradle/wrapper
      - .gradle/caches
  #tag::services[]
  services:
    - name: localstack/localstack
      alias: localstack
  #end::services[]
  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - export GRADLE_OPTS='-Dorg.gradle.daemon=false'

    - source gitlab/test.env

    - yum -y install unzip || true
    - microdnf install unzip || true

    - curl https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o /tmp/awscli.zip
    - unzip /tmp/awscli.zip -d /tmp/awscli
    - /tmp/awscli/aws/install

    - dynamo/seed/seed.sh
    #tag::seed[]
    - s3/seed/seed.sh
    #end::seed[]
    - kinesis/seed/seed.sh
    - sns/seed/seed.sh
    - sqs/seed/seed.sh
    - ses/seed/seed.sh
  script:
    - &unit ./gradlew test jacocoTestReport --stacktrace --scan
  artifacts:
    name: $CI_COMMIT_SHA-$CI_JOB_NAME
    when: always
    expire_in: 1 day
    paths:
      - "*/*/build/reports"
      - "*/*/build/test-results"
      - "*/*/build/jacoco"
    reports:
      junit:
        - "*/*/build/test-results/test/TEST-*.xml"

unit@openjdk:8:
  extends: .unit
  image: openjdk:8
  script:
    - *unit
    - bash <(curl -s https://codecov.io/bash)

unit@openjdk:10:
  extends: .unit
  image: openjdk:10

unit@openjdk:11:
  extends: .unit
  image: openjdk:11

unit@openjdk:12:
  extends: .unit
  image: openjdk:12

unit@openjdk:13:
  extends: .unit
  image: openjdk:13

unit@openjdk:14:
  extends: .unit
  image: openjdk:14

unit@openjdk:15:
  extends: .unit
  image: openjdk:15

unit@openjdk:8-latest-aws-sdk:
  extends: .unit
  image: openjdk:8
  script:
    - export BY_DEV_MADHEAD_AWS_JUNIT5_USE_LATEST_AWS_SDK=true
    - *unit

gradle-version:
  stage: test
  image: openjdk:8
  script:
    - gradle_version=$(./gradlew --version | sed -rn 's/^Gradle (.+)$/\1/p')
    - latest_gradle_version=$(curl https://services.gradle.org/versions/current | python2 -c 'import json,sys;print json.load(sys.stdin)["version"]')
    - echo $gradle_version
    - echo $latest_gradle_version
    - '[[ $gradle_version == $latest_gradle_version ]]'
  allow_failure: true

copyright:
  stage: test
  image: bash:latest
  script:
    - copyright_year=$(sed -n 's/Copyright (c) \([[:digit:]]\{4\}\) madhead <siarhei.krukau@gmail.com>/\1/p' LICENSE)
    - current_year=$(date +%Y)
    - echo $copyright_year
    - echo $current_year
    - '[[ $copyright_year == $current_year ]]'
  allow_failure: true

OSSRH:
  stage: publish
  image: openjdk:8
  script:
    - ./gradlew publish
  only:
    - master
  dependencies: [ ]

pages:
  stage: publish
  image: openjdk:8
  script:
    - ./gradlew javadocs asciidoctor
    - mkdir public
    - cp -r build/docs/javadoc public/javadoc
    - cp -r build/docs/asciidoc public/asciidoc
  only:
    - master
  dependencies: [ ]
  artifacts:
    paths:
      - public
